server.port=8282

spring.datasource.url=jdbc:postgresql://localhost:5433/tokentest
spring.datasource.username=postgres
spring.datasource.password=#skdlf12

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# logging.level.org.hibernate.type.descriptor.sql=trace

spring.datasource.platform=postgresql
spring.datasource.schema=classpath:db/datasource/data-${platform}.sql

# 출처: https://preamtree.tistory.com/78 [Preamtree의 행복로그]
#  최대 connection 개수
spring.datasource.tomcat.max-active=10
# 초기화 connection 개수    
spring.datasource.tomcat.initial-size=2
# idle 상태의 connection 최대 개수
spring.datasource.tomcat.max-idle=2
# idle 상태의 connection 최소 개수
spring.datasource.tomcat.min-idle=1
#  true로 주면, idle 상태에서도 test를 실행함
spring.datasource.tomcat.test-while-idle=true    
#  idle 상태가 얼마나 지속되면 test를 실행할 것인지. mil값임.
spring.datasource.tomcat.time-between-eviction-runs-millis=3600000    
#  connection의 유효기간.
spring.datasource.tomcat.min-evictable-idle-time-millis=7200000    
#  connection을 가져올 때, test 할것인지 여부    
spring.datasource.tomcat.testOnBorrow=true        
#  test QUERY
spring.datasource.tomcat.validationQuery=SELECT 1 

spring.jpa.properties.hibernate.default_schema=rest
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.data.web.pageable.default-page-size=20
spring.data.web.pageable.max-page-size=10000

# Hibernate ddl auto (create, create-drop, validate, update, none)
# 보통 개발 때는 jpa를 사용하여, update 방식으로 쓰다가, 배포 할 때 쯤, test 파일로 깔끔한 스키마를 얻어서, schema.sql에 쿼리문을 넣어서 사용한다. 이 때는 validate 방식을 사용한다고한다.
# spring.jpa.hibernate.dll-auto를 validate로 정의해도 스프링 부트에서 자동적으로 schema.sql의 SQL문을 실행하기 때문에 자동적으로 테이블이 삭제되었다가 생성됩니다.

# spring.jpa.hibernate.dll-auto : create, create-drop, update, validate, none 옵션을 설정할 수 있습니다. 
#   create : JPA가 DB와 상호작용할 때 기존에 있던 스키마(테이블)을 삭제하고 새로 만드는 것을 뜻합니다.
#   create-drop : JPA 종료 시점에 기존에 있었던 테이블을 삭제합니다.
#   update : JPA에 의해 변경된 부분만 반영합니다.
#   validate : 엔티티와 테이블이 정상 매핑되어 있는지만 검증합니다.
#   none : 초기화 동작을 사용하지 않습니다.
# spring.jpa.generate-dll: spring.jpa.hibernate.dll-auto 옵션을 사용할 것인지를 결정하는 프로퍼티입니다. 기본적으로 false로 되어있기 때문에 JPA에 의한 데이터베이스 자동 초기화 기능을 사용하려면 true로 세팅해야합니다.
# spring.jpa.show-sql: JPA가 생성한 SQL문을 보여줄 지에 대한 여부를 알려주는 프로퍼티입니다.

spring.jpa.hibernate.ddl-auto=update

spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5433/tokentest
spring.flyway.user=postgres
spring.flyway.password=#skdlf12
spring.flyway.schemas=rest
spring.flyway.outOfOrder=true

# https://oingdaddy.tistory.com/272
# https://springdoc.org/faq.html
springdoc.version:'test1'
springdoc.api-docs.path:/api-docs
springdoc.default-consumes-media-type:application/json,application/x-www-form-urlencoded
springdoc.default-produces-media-type:application/json
springdoc.swagger-ui.operationsSorter:alpha
springdoc.swagger-ui.tagsSorter:alpha
springdoc.swagger-ui.path:/swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url:true
springdoc.swagger-ui.display-query-params-without-oauth2:true
# springdoc.swagger-ui.paths-to-match:/v1/nileapi/**,/v1/nileapidev/**
springdoc.swagger-ui.paths-to-match:/**
springdoc.packagesToScan:com.example.tokentest


# 출처: https://blog.jiniworld.me/83 [hello jiniworld]
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# spring.jackson.time-zone = Asia/Kolkata

spring.jwt.secret=#skdlf12#skdlf12#skdlf12#skdlf12#skdlf12#skdlf12#skdlf12#skdlf12
spring.jwt.jwtExpirationMs= 86400000
spring.jwt.jwtRefreshExpirationMs= 86400000

# spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.database=0

# configuration email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=email
spring.mail.password=password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true